{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sophos UTM 9",
  "Parameters": {
    "AMI": {
      "Description": "Autodetect uses the latest AMI based on the pricing option you select. Otherwise, specify an AMI ID.",
      "Type": "String",
      "Default": "autodetect"
    },
    "LicenseType": {
      "Description": "Select between Bring Your Own License (BYOL) or pay per instance-hour (Hourly). This parameter does not take effect if you manually enter an AMI ID.",
      "Type": "String",
      "AllowedValues": [
        "Hourly",
        "BYOL"
      ]
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "ID of an existing VPC to launch the deployment in."
    },
    "PrivateSubnetId": {
      "Description": "Subnet ID for private network interface.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnetId": {
      "Description": "Subnet ID for public network interface.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateNetworkCIDR": {
      "Description": "Allow all traffic from this CIDR on the private network interface.",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "Must be IPv4 CIDR notation: X.X.X.X/X"
    },
    "PublicNetworkCIDR": {
      "Description": "Allow all TCP traffic (except port 22 and 4444) from this CIDR on the public network interface.",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "Must be IPv4 CIDR notation: X.X.X.X/X"
    },
    "OptTrustedNetworkCIDR": {
      "Description": "Allow all traffic (including! TCP port 22 and 4444) from this CIDR on the public network interface.",
      "Type": "String",
      "Default": ""
    },
    "InstanceSize": {
      "Description": "The default EC2 instance type is m4.large. If m4.large is not available in your region, a similar EC2 instance type will be used.",
      "Type": "String",
      "Default": "default"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access."
    },
    "OptExistingElasticIpId": {
      "Description": "Association ID of an existing Elastic IP. If no ID is specified a new Elastic IP is created.",
      "Type": "String"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Instance Configuration"
          },
          "Parameters": [
            "AMI",
            "LicenseType",
            "InstanceSize"
          ]
        },
        {
          "Label": {
            "default": "Infrastructure Configuration"
          },
          "Parameters": [
            "VpcId",
            "PrivateSubnetId",
            "PublicSubnetId",
            "PrivateNetworkCIDR",
            "PublicNetworkCIDR",
            "OptExistingElasticIpId"
          ]
        },
        {
          "Label": {
            "default": "Access Permissions"
          },
          "Parameters": [
            "KeyName",
            "OptTrustedNetworkCIDR"
          ]
        }
      ],
      "ParameterLabels": {
        "AMI": {
          "default": "AMI ID (required)"
        },
        "LicenseType": {
          "default": "Pricing Option (required)"
        },
        "InstanceSize": {
          "default": "Instance Type (required)"
        },
        "VpcId": {
          "default": "VPC ID (required)"
        },
        "PrivateSubnetId": {
          "default": "Private Subnet ID (required)"
        },
        "PublicSubnetId": {
          "default": "Public Subnet ID (required)"
        },
        "PrivateNetworkCIDR": {
          "default": "Private Network CIDR (required)"
        },
        "PublicNetworkCIDR": {
          "default": "Public Network CIDR (required)"
        },
        "OptExistingElasticIpId": {
          "default": "Existing Elastic IP ID (optional)"
        },
        "KeyName": {
          "default": "SSH Key (required)"
        },
        "OptTrustedNetworkCIDR": {
          "default": "Trusted Network CIDR (optional)"
        }
      }
    }
  },
  "Mappings": {
    "RegionMap": {
      "af-south-1": {
        "Hourly": "",
        "BYOL": "",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ap-east-1": {
        "Hourly": "",
        "BYOL": "",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ap-northeast-1": {
        "Hourly": "ami-02321c5c0de3bf5ad",
        "BYOL": "ami-01533637d8403f287",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ap-northeast-2": {
        "Hourly": "ami-0069d602707eea49f",
        "BYOL": "ami-0f6691d9f189228fd",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ap-northeast-3": {
        "Hourly": "ami-03117087f2f5b76f3",
        "BYOL": "ami-09f7cdb60b0b3515e",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ap-south-1": {
        "Hourly": "ami-0f02f2fbcbcb09f87",
        "BYOL": "ami-092fe1a2681d0d1a1",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ap-southeast-1": {
        "Hourly": "ami-0ed11989c44290a17",
        "BYOL": "ami-001b9defac397e4c2",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ap-southeast-2": {
        "Hourly": "ami-09562e046182ee14d",
        "BYOL": "ami-0d0ed98e96ee839bc",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "ca-central-1": {
        "Hourly": "ami-04d011eb5b1718d0f",
        "BYOL": "ami-010d252471939744c",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "eu-central-1": {
        "Hourly": "ami-0c65ce3ac9afba5c3",
        "BYOL": "ami-01143766bcf06e0d4",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "eu-north-1": {
        "Hourly": "ami-0e6aaa57bad3d1aca",
        "BYOL": "ami-048e94f642acffff0",
        "ARN": "aws",
        "HAInstanceType": "m5.large"
      },
      "eu-south-1": {
        "Hourly": "",
        "BYOL": "",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "eu-west-1": {
        "Hourly": "ami-0b8d71cc7493b5dae",
        "BYOL": "ami-099d0622606f3b93f",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "eu-west-2": {
        "Hourly": "ami-0d96369392e115d10",
        "BYOL": "ami-0dadcd767837911a9",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "eu-west-3": {
        "Hourly": "ami-05f84326903d957f1",
        "BYOL": "ami-01d03505dd981679a",
        "ARN": "aws",
        "HAInstanceType": "m5.large"
      },
      "me-south-1": {
        "Hourly": "",
        "BYOL": "",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "sa-east-1": {
        "Hourly": "ami-06efd75ee8e282d30",
        "BYOL": "ami-0f0e41061555ee6aa",
        "ARN": "aws",
        "HAInstanceType": "m3.medium"
      },
      "us-east-1": {
        "Hourly": "ami-01dcb53829e65d12f",
        "BYOL": "ami-0029e6ffcf298fa66",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "us-east-2": {
        "Hourly": "ami-0cef7220eadec23bf",
        "BYOL": "ami-0043b7f886add88cc",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "us-gov-east-1": {
        "Hourly": "ami-039e0ef62d7adaa01",
        "BYOL": "ami-0a3791b4c6f3572bb",
        "ARN": "aws-us-gov",
        "HAInstanceType": "m5.large"
      },
      "us-gov-west-1": {
        "Hourly": "ami-0026acc2aaa979378",
        "BYOL": "ami-0a0f618e8c4bb2aa4",
        "ARN": "aws-us-gov",
        "HAInstanceType": "m4.large"
      },
      "us-west-1": {
        "Hourly": "ami-053b30eb8a4ba3295",
        "BYOL": "ami-009899771e2e4b168",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      },
      "us-west-2": {
        "Hourly": "ami-07c5a1097a9c5489c",
        "BYOL": "ami-0244322900205f8bb",
        "ARN": "aws",
        "HAInstanceType": "m4.large"
      }
    }
  },
  "Conditions": {
    "DetectAMI": {
      "Fn::Equals": [
        {
          "Ref": "AMI"
        },
        "autodetect"
      ]
    },
    "DetectInstanceSize": {
      "Fn::Equals": [
        {
          "Ref": "InstanceSize"
        },
        "default"
      ]
    },
    "TrustedPublicNetwork": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "OptTrustedNetworkCIDR"
            },
            ""
          ]
        }
      ]
    },
    "AllocateElasticIP": {
      "Fn::Equals": [
        {
          "Ref": "OptExistingElasticIpId"
        },
        ""
      ]
    }
  },
  "Resources": {
    "SecurityGroupPrivate": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "CidrIp": {
              "Ref": "PrivateNetworkCIDR"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "Description": "Allow all outbound traffic",
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "SecurityGroupPublic": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": {
              "Ref": "PublicNetworkCIDR"
            },
            "FromPort": "0",
            "ToPort": "21"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": {
              "Ref": "PublicNetworkCIDR"
            },
            "FromPort": "23",
            "ToPort": "4443"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": {
              "Ref": "PublicNetworkCIDR"
            },
            "FromPort": "4445",
            "ToPort": "5431"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": {
              "Ref": "PublicNetworkCIDR"
            },
            "FromPort": "5433",
            "ToPort": "65535"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "3410",
            "ToPort": "3410",
            "CidrIp": {
              "Ref": "PublicNetworkCIDR"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "Description": "Allow all outbound traffic",
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "SecurityGroupTrusted": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "CidrIp": {
              "Ref": "OptTrustedNetworkCIDR"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "Description": "Allow all outbound traffic",
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      },
      "Condition": "TrustedPublicNetwork"
    },
    "PublicENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetId"
        },
        "Description": "ENI for Public Subnet",
        "GroupSet": [
          {
            "Fn::If": [
              "TrustedPublicNetwork",
              {
                "Ref": "SecurityGroupTrusted"
              },
              {
                "Ref": "SecurityGroupPublic"
              }
            ]
          },
          {
            "Ref": "SecurityGroupPublic"
          }
        ],
        "SourceDestCheck": "false"
      }
    },
    "PrivateENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetId"
        },
        "Description": "ENI for Private Subnet",
        "GroupSet": [
          {
            "Ref": "SecurityGroupPrivate"
          }
        ],
        "SourceDestCheck": "false"
      }
    },
    "Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private"
          }
        ],
        "InstanceType": {
          "Fn::If": [
            "DetectInstanceSize",
            {
              "Fn::FindInMap": [
                "RegionMap",
                {
                  "Ref": "AWS::Region"
                },
                "HAInstanceType"
              ]
            },
            {
              "Ref": "InstanceSize"
            }
          ]
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "NetworkInterfaces": [
          {
            "NetworkInterfaceId": {
              "Ref": "PublicENI"
            },
            "DeviceIndex": "0"
          },
          {
            "NetworkInterfaceId": {
              "Ref": "PrivateENI"
            },
            "DeviceIndex": "1"
          }
        ],
        "ImageId": {
          "Fn::If": [
            "DetectAMI",
            {
              "Fn::FindInMap": [
                "RegionMap",
                {
                  "Ref": "AWS::Region"
                },
                {
                  "Ref": "LicenseType"
                }
              ]
            },
            {
              "Ref": "AMI"
            }
          ]
        }
      }
    },
    "NewEIP": {
      "Type": "AWS::EC2::EIP",
      "Condition": "AllocateElasticIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "EIPAssociation": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "NetworkInterfaceId": {
          "Ref": "PublicENI"
        },
        "AllocationId": {
          "Fn::If": [
            "AllocateElasticIP",
            {
              "Fn::GetAtt": [
                "NewEIP",
                "AllocationId"
              ]
            },
            {
              "Ref": "OptExistingElasticIpId"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "URL": {
      "Description": "URL to the Gateway portal",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "Instance",
                "PublicIp"
              ]
            },
            ":4444"
          ]
        ]
      }
    }
  }
}
